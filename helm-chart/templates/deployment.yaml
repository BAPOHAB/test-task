apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      volumes:
      - name: message
        configMap:
          name: message
          items:
            - key: message.html
              path: message.html
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        volumeMounts:
        - name: message
          mountPath: /usr/share/nginx/html/message.html
          subPath: message.html
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.port }}
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        startupProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.port }}
          {{- toYaml .Values.startupProbe | nindent 10 }}
        resources:
          limits:
            memory: "32Mi"
            cpu: "100m"
          requests:
            memory: "32Mi"
            cpu: "10m"
